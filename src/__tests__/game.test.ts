import * as game from '../game'
import * as utils from '../utils'
import * as bsutil from '../bitSetUtils'
test('sameMoveCheck: same move five times in a row', () => {
    let states = [18446462598733168637n, 18445341096872837117n, 18445341105462509565n,
        17868882552182341629n, 17868882552316557309n, 17868602176851474429n,
        8568806448636491912n, 17868601079487297533n, 17868601079554405373n,
        8568806448636491912n, 17796543485516479469n, 17796543476926544877n,
        17796543478000270317n, 17792039947092376557n, 17792039947094473645n,
        8568806448636491912n, 17756151887572253581n, 17756151887572253325n,
        17756151887572253580n, 17756151887505406860n, 17756151887503342476n,
        17756151887503341964n, 8568806448636491912n, 17756149688480283016n,
        17756149688482347400n,  8568806448646535560n,  8568806448646536328n,
         8568806448646405258n,  8568806448644340874n,  8568806448644863114n,
         8568806448644864138n,  8568806448644864136n,  8568806448636491912n,
         6262963439422797960n,  6262963439691229320n,  6262963439691360384n,
         6262963439691360320n,  6267467039318665280n,  6267467039318663744n,
         6262963456871162432n,  6262963456879534656n,  6118849368315306560n]
         //here 8568806448636491912n is done 5 times
    expect(game.sameMoveCheck(states)).toBe(true)
})

test('sameMoveCheck: not same move five times', () => {
let states =   [18446462598733168637n, 18445341096872837117n, 18445341105462509565n,
17868882552182341629n, 17868882552316557309n, 17868602176851474429n]
 expect(game.sameMoveCheck(states)).toBe(false)
})

test('fifty move: contains a pawn move', () => {
let history = [[ 1, 18, 'N', 'N' ],  [ 57, 42, 'N', 'N' ], [ 8, 16, 'P', 'N' ],
[ 49, 41, 'P', 'N' ], [ 6, 21, 'N', 'N' ],  [ 53, 45, 'P', 'N' ],
[ 15, 23, 'P', 'N' ], [ 48, 40, 'P', 'N' ], [ 21, 31, 'N', 'N' ],
[ 40, 32, 'P', 'N' ], [ 18, 24, 'N', 'N' ], [ 56, 48, 'R', 'N' ],
[ 14, 30, 'P', 'N' ], [ 62, 47, 'N', 'N' ], [ 31, 14, 'N', 'N' ],
[ 60, 53, 'K', 'N' ], [ 13, 21, 'P', 'N' ], [ 42, 27, 'N', 'N' ],
[ 4, 13, 'K', 'N' ],  [ 51, 35, 'P', 'N' ], [ 13, 6, 'K', 'N' ],
[ 52, 44, 'P', 'N' ], [ 12, 20, 'P', 'N' ], [ 58, 49, 'B', 'N' ],
[ 5, 40, 'B', 'N' ],  [ 27, 10, 'N', 'N' ], [ 7, 15, 'R', 'N' ],
[ 44, 36, 'P', 'N' ], [ 3, 5, 'Q', 'N' ],   [ 53, 46, 'K', 'N' ],
[ 9, 25, 'P', 'N' ],  [ 47, 37, 'N', 'N' ], [ 30, 37, 'P', 'N' ],
[ 50, 42, 'P', 'N' ], [ 40, 33, 'B', 'N' ], [ 36, 28, 'P', 'N' ],
[ 14, 29, 'N', 'N' ], [ 49, 40, 'B', 'N' ], [ 15, 13, 'R', 'N' ],
[ 10, 4, 'N', 'N' ],  [ 33, 12, 'B', 'N' ], [ 59, 50, 'Q', 'N' ],
[ 29, 39, 'N', 'N' ], [ 46, 47, 'K', 'N' ], [ 39, 22, 'N', 'N' ],
[ 50, 22, 'Q', 'N' ], [ 23, 31, 'P', 'N' ], [ 42, 34, 'P', 'N' ],
[ 24, 18, 'N', 'N' ], [ 22, 29, 'Q', 'N' ], [ 13, 15, 'R', 'N' ],
[ 29, 57, 'Q', 'N' ], [ 18, 35, 'N', 'N' ], [ 40, 49, 'B', 'N' ]]
expect(game.fiftyMoves(history)).toBe(false)
})

test('fifty move: no pawn moves, no captures', () => {
    let history = [[ 1, 18, 'N', 'N' ],  [ 57, 42, 'N', 'N' ], [ 8, 16, 'P', 'N' ],
[ 49, 41, 'N', 'N' ], [ 6, 21, 'N', 'N' ],  [ 53, 45, 'N', 'N' ],
[ 15, 23, 'N', 'N' ], [ 48, 40, 'N', 'N' ], [ 21, 31, 'N', 'N' ],
[ 40, 32, 'N', 'N' ], [ 18, 24, 'N', 'N' ], [ 56, 48, 'R', 'N' ],
[ 14, 30, 'N', 'N' ], [ 62, 47, 'N', 'N' ], [ 31, 14, 'N', 'N' ],
[ 60, 53, 'K', 'N' ], [ 13, 21, 'N', 'N' ], [ 42, 27, 'N', 'N' ],
[ 4, 13, 'K', 'N' ],  [ 51, 35, 'N', 'N' ], [ 13, 6, 'K', 'N' ],
[ 52, 44, 'N', 'N' ], [ 12, 20, 'N', 'N' ], [ 58, 49, 'B', 'N' ],
[ 5, 40, 'B', 'N' ],  [ 27, 10, 'N', 'N' ], [ 7, 15, 'R', 'N' ],
[ 44, 36, 'N', 'N' ], [ 3, 5, 'Q', 'N' ],   [ 53, 46, 'K', 'N' ],
[ 9, 25, 'N', 'N' ],  [ 47, 37, 'N', 'N' ], [ 30, 37, 'N', 'N' ],
[ 50, 42, 'N', 'N' ], [ 40, 33, 'B', 'N' ], [ 36, 28, 'N', 'N' ],
[ 14, 29, 'N', 'N' ], [ 49, 40, 'B', 'N' ], [ 15, 13, 'R', 'N' ],
[ 10, 4, 'N', 'N' ],  [ 33, 12, 'B', 'N' ], [ 59, 50, 'Q', 'N' ],
[ 29, 39, 'N', 'N' ], [ 46, 47, 'K', 'N' ], [ 39, 22, 'N', 'N' ],
[ 50, 22, 'Q', 'N' ], [ 23, 31, 'N', 'N' ], [ 42, 34, 'N', 'N' ],
[ 24, 18, 'N', 'N' ], [ 22, 29, 'Q', 'N' ], [ 13, 15, 'R', 'N' ],
[ 29, 57, 'Q', 'N' ], [ 18, 35, 'N', 'N' ], [ 40, 49, 'B', 'N' ]]
    expect(game.fiftyMoves(history)).toBe(true)

})

test('fifty move: contains a capture', () => {
    let history = [[ 1, 18, 'N', 'N' ],  [ 57, 42, 'N', 'N' ], [ 8, 16, 'P', 'N' ],
    [ 49, 41, 'N', 'N' ], [ 6, 21, 'N', 'N' ],  [ 53, 45, 'N', 'N' ],
    [ 15, 23, 'N', 'N' ], [ 48, 40, 'N', 'N' ], [ 21, 31, 'N', 'N' ],
    [ 40, 32, 'N', 'N' ], [ 18, 24, 'N', 'N' ], [ 56, 48, 'R', 'N' ],
    [ 14, 30, 'N', 'N' ], [ 62, 47, 'N', 'N' ], [ 31, 14, 'N', 'N' ],
    [ 60, 53, 'K', 'N' ], [ 13, 21, 'N', 'N' ], [ 42, 27, 'N', 'N' ],
    [ 4, 13, 'K', 'N' ],  [ 51, 35, 'N', 'N' ], [ 13, 6, 'K', 'N' ],
    [ 52, 44, 'N', 'N' ], [ 12, 20, 'N', 'N' ], [ 58, 49, 'B', 'N' ],
    [ 5, 40, 'B', 'N' ],  [ 27, 10, 'N', 'N' ], [ 7, 15, 'R', 'N' ],
    [ 44, 36, 'N', 'N' ], [ 3, 5, 'Q', 'N' ],   [ 53, 46, 'K', 'N' ],
    [ 9, 25, 'N', 'N' ],  [ 47, 37, 'N', 'N' ], [ 30, 37, 'N', 'N' ],
    [ 50, 42, 'N', 'N' ], [ 40, 33, 'B', 'N' ], [ 36, 28, 'N', 'N' ],
    [ 14, 29, 'N', 'N' ], [ 49, 40, 'B', 'N' ], [ 15, 13, 'R', 'N' ],
    [ 10, 4, 'N', 'N' ],  [ 33, 12, 'B', 'N' ], [ 59, 50, 'Q', 'N' ],
    [ 29, 39, 'N', 'N' ], [ 46, 47, 'K', 'N' ], [ 39, 22, 'N', 'N' ],
    [ 50, 22, 'Q', 'N' ], [ 23, 31, 'N', 'N' ], [ 42, 34, 'N', 'N' ],
    [ 24, 18, 'N', 'N' ], [ 22, 29, 'Q', 'N' ], [ 13, 15, 'R', 'C' ],
    [ 29, 57, 'Q', 'N' ], [ 18, 35, 'N', 'N' ], [ 40, 49, 'B', 'N' ]]
    expect(game.fiftyMoves(history)).toBe(false)

})


test('parseInputMove', () => {
    expect(game.parseInputSquare('e4')).toBe(28)
    expect(game.parseInputSquare('h8')).toBe(63)
    expect(game.parseInputSquare('a1')).toBe(0)
    expect(game.parseInputSquare('e7')).toBe(52)
    expect(game.parseInputSquare('e6')).toBe(44)
})