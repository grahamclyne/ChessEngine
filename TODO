scenario where player has more than two queens
is it correct to assume for attack boards, we should only consider our own pieces as occupied? we can still attack that square? 
checkmate logic and turn logic both contain code to check if there is move to get out of check....
factor out en passant logic from pawn moves
perft
uci
player input
deal with case where king is uncovered via enpassant in findNoCheckMoves
make a randomPositions function to help with benchmarking

NOTES TO SELF

how can history and board state be coupled that neither can be out of sync?
d everything under the L20 label. The actual indexing is just the movq and movsd instructions. So if you care about really fast code then you will get much more of a performance penalty from the bound checking than the 1-based indexing. Fortunately Julia offers ways to alleviate this problems through the use of @inbound and --check-bounds=no.
THE sq variable, and whenever looking to access a square from the board is not zero indexed, 64 is possible, 0 is not etc
using Revise in REPL so do not have to restart module to reuse pprof when changing a function does not work --- so slow
